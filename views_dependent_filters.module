<?php

/**
 * @file
 * Views Dependent Filters module file.
 *
 * Provides a Views exposed filter which makes other filters depend on values
 * in yet further filters for their visibility and processing.
 * For example: if the 'node type' filter is set to 'article', show a filter for
 * a field that is only present on articles.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function views_dependent_filters_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the views_dependent_filters module.
    case 'help.page.views_dependent_filters':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Allows the presence of exposed filters on a view to be
      controlled by values in another exposed filter. Dependent filters are hidden
      when not relevant, and their values are not considered when the exposed form
      is submitted.') . '</p>';
      return $output;

    default:
  }
}

/**
 * After build form processor for the views exposed form.
 */
function views_dependent_filters_exposed_form_after_build($form, FormStateInterface $form_state) {
  // We may have multiple dependency info arrays from more than one copies
  // of the views_dependent_filters_handler_filter_dependent handler.
  if (empty($form_state->dependent_exposed_filters)) {
    return $form;
  }
  foreach ($form_state->dependent_exposed_filters as $dependency_info) {
    $form_dependency = [];
    $form_dependency_array = [];
    foreach ($dependency_info['controllers'] as $filter_id => $controller_values) {
      $identifier = $dependency_info['identifiers'][$filter_id];
      // Regular form.
      foreach ($controller_values as $controller_value) {
        $part = ":input[name= $filter_id]";
        $form_dependency[$part]['value'] = $controller_value;
        // Converting in array for multi-value fields.
        $form_dependency_array[] = $form_dependency;
      }
    }

    // Set the dependency on each form element as required.
    foreach ($dependency_info['dependents'] as $dependent_filter_id) {

      $identifier = $dependency_info['identifiers'][$dependent_filter_id];
      $form[$identifier]['#states']['visible'] = $form_dependency_array;
    }
  }
  return $form;
}
